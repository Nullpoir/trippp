"""
Django settings for trippp project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_ROOT = os.path.dirname(BASE_DIR)
LOGIN_REDIRECT_URL="/"
LOGOUT_REDIRECT_URL="/"
LOGIN_URL = '/account/login'

EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'metadata.line.endpoint@gmail.com'
EMAIL_HOST_PASSWORD = 'metadata0'
EMAIL_PORT = 587
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'q7z)m3miu63js_ymg_5+36@iy0j)glzvgkb9$cy)*$7vo)4*x5'

# SECURITY WARNING: don't run with debug turned on in production!
if PROJECT_ROOT == "/srv/http":
    DEBUG = False
else:
    DEBUG = True
ALLOWED_HOSTS = ["*"]
AUTH_USER_MODEL = "account.User"



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'account.apps.AccountConfig',
    'compressor',
    'tinymce',
    'widget_tweaks',
    'article.apps.ArticleConfig',
    'api.apps.ApiConfig',
    'tabilog.apps.TabilogConfig',
    'auto_py.apps.AutoPyConfig',
]

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'my_cache_table',
    }
}

TINYMCE_DEFAULT_CONFIG = {
    'height': 360,
    'width': '100%',
    'cleanup_on_startup': True,
    'theme': 'modern',
    'plugins': '''
    textcolor save link image media preview codesample contextmenu
            table code lists fullscreen  insertdatetime  nonbreaking
            contextmenu directionality searchreplace wordcount visualblocks
            visualchars code fullscreen autolink lists  charmap print  hr
            anchor pagebreak
    ''',
    'toolbar1': '''
    fullscreen preview bold italic underline | forecolor backcolor | alignleft alignright |
    aligncenter alignjustify bullist code | indent outdent formatselect | searchreplace  table |
    |  link image  |
    ''',
    'block_formats': "Paragraph=p;区切り=h2;",
    'mobile':"""
    {
    theme:mobile,
    height: 360,
    width: 100%,
    plugins:[formatselect]

    toolbar:[
    'preview','bold','italic','underline','forecolor','backcolor','alignleft','alignright',
    'aligncenter','alignjustify','bullist','code','indent','outdent','formatselect','searchreplace','table',
    'link','image'  ]
    }
    """,
    'contextmenu': 'formats | link image',
    'menubar': False,
    'statusbar':True,
    'custom_undo_redo_levels': 20,
    'automatic_upload':True,
    'selector': 'textarea',
    'paste_data_images':False,
    'images_upload_credentials': False,
    'relative_urls' : False,
    'force_p_newlines' : False,
    'force_br_newlines' : True,
    'forced_root_block' : 'div',
    'element_format':'html',
    'content_css':'/static/css/tabilog_post_editor.css',

    }

TINYMCE_CALLBACKS={

    'images_upload_handler':"""
    function (blobInfo, success, failure) {
        var xhr, formData;
        var name;
        name='csrftoken'
        var cookieValue = null;
        if (document.cookie && document.cookie != '') {
            var cookies = document.cookie.split(';');
            for (var i = 0; i < cookies.length; i++) {
                var cookie = jQuery.trim(cookies[i]);
                if (cookie.substring(0, name.length + 1) == (name + '=')) {
                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        var csrftoken =  cookieValue;
        xhr = new XMLHttpRequest();
        xhr.withCredentials = true;
        xhr.open('POST', '/api/image_post/');
        xhr.setRequestHeader("X-CSRFToken",csrftoken)

        xhr.onload = function() {
          var json;

          if (xhr.status != 200) {
            failure('HTTP Error: ' + xhr.status);
            return;
          }

          json = JSON.parse(xhr.responseText);

          if (!json || typeof json.location != 'string') {
            failure('Invalid JSON: ' + xhr.responseText);
            return;
          }
          success(json.location);
        };

        formData = new FormData();
        formData.append('file', blobInfo.blob(), blobInfo.filename());

        xhr.send(formData);
        }
        """,
}

APPEND_SLASH=True

MIDDLEWARE = [
    'django.middleware.gzip.GZipMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    #'django.middleware.cache.UpdateCacheMiddleware',  # Django Cache
    #'django.middleware.common.CommonMiddleware',  # Django Cache
    #'django.middleware.cache.FetchFromCacheMiddleware',  # Django Cache
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'trippp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'trippp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }
else:
    DATABASES = {
    'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'trippp-core',
            'USER': 'root',
            'PASSWORD': 'trippp0410',
            'HOST': 'localhost',
            'PORT': '8889',
            'OPTIONS': {
                'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            },
            'TEST': {
                'NAME': 'trippp'
            }
        }
    }


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'ja-jp'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)
'''
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
)
'''
STATIC_ROOT=os.path.join(PROJECT_ROOT,"static")

MEDIA_URL="/media/"
MEDIA_ROOT=BASE_DIR+"/media/"
